@inherits TimeWarpStateComponent

@if (IsSmallDisplay)
{
    <BitBadge Hidden="@(!HasValidationIndicator)" Dot Size="BitSize.Small" Position="BitPosition.CenterEnd" Color="BitColor.Error">
        <BitIcon Size="BitSize.Medium" IconName="@Item.IconName" />
    </BitBadge>
}
else
{
    <BitStack Horizontal VerticalAlign="BitAlignment.Center" Style="width:100%; gap:.125rem;">
        <BitStack Horizontal VerticalAlign="BitAlignment.Center"
                  Style="flex:1 1 auto; min-width:0; gap:.125rem;">
            <BitIcon IconName="@Item.IconName" />
            <BitText Style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
                @Item.Text
            </BitText>
        </BitStack>

        <!-- Right endcap: fixed width to prevent width changes -->
        <div style="width:8px; display:flex; justify-content:flex-end;">
            @if (!string.IsNullOrEmpty(Item.ValidationIconName))
            {
                <BitIcon IconName="@Item.ValidationIconName" Color="@BitColor.Error" />
            }
            else
            {
                <!-- invisible placeholder keeps width stable -->
                <span style="width:8px; height:8px; display:inline-block; opacity:0;"></span>
            }
        </div>
    </BitStack>
}

@code {
    [Parameter, EditorRequired] public CustomNavItem Item { get; set; } = default!;
    [Parameter, EditorRequired] public bool IsSmallDisplay { get; set; } = false;
    bool HasValidationIndicator => !string.IsNullOrEmpty(Item?.ValidationIconName);
}
