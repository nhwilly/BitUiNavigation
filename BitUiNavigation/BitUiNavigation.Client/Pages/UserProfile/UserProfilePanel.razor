@inherits ModalPanelBase<UserProfileViewModel>
@using Blazored.FluentValidation
@using FluentValidation
@using BitUiNavigation.Client.Pages.Modals

<ShimmerUntilReady IsReady=@IsModelReady>
    <EditForm Model="@Model">
        <FluentValidationValidator />

        <BitTextField Label="First name" @bind-Value="@Model.FirstName" Trim IsEnabled="IsNotBusy" />
        <ValidationMessage For="() => Model.FirstName" />

        <BitTextField Label="Last name" @bind-Value="@Model.LastName" Trim IsEnabled="IsNotBusy" />
        <ValidationMessage For="() => Model.LastName" />

        <BitButton OnClick="Save">Save</BitButton>
        <p>
            <span>AccountId: @AccountId</span>
        </p>
        <p>
            <span>LocationId: @LocationId</span>
        </p>
    </EditForm>
</ShimmerUntilReady>

@code {
    [Parameter, SupplyParameterFromQuery] public Guid AccountId { get; set; }
    [Parameter, SupplyParameterFromQuery] public Guid LocationId { get; set; }

    private readonly UserService _userService = new();
    bool IsNotBusy => !ModalHostState.IsSaving;

    protected override async Task<UserProfileViewModel> CreateInitialModel()
    {
        var p = await _userService.GetUserAsync(AccountId, LocationId);
        await ModalHostState.SetTitle($"User Profile: {p.FirstName} {p.LastName}");
        return p;
    }

    protected override async Task PersistAsync(UserProfileViewModel model)
        => await _userService.SaveUserAsync(model);

}
