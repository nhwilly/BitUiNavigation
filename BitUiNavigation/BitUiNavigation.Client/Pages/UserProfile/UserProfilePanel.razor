@inherits ModalPanelBase<UserProfileViewModel>
@using Blazored.FluentValidation
@using FluentValidation
@using BitUiNavigation.Client.Pages.Modals

@if (!IsModelReady)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@Model">
        <FluentValidationValidator />
        <ValidationSummary />
        <InputText @bind-Value="@Model.FirstName" />
        <InputText @bind-Value="@Model.LastName" />
        <BitButton OnClick="Save">Save</BitButton>
        <p>
            <span>AccountId: @AccountId</span>
        </p>
        <p>
            <span>LocationId: @LocationId</span>
        </p>
    </EditForm>
}

@code {
    [Parameter, SupplyParameterFromQuery] public Guid AccountId { get; set; }
    [Parameter, SupplyParameterFromQuery] public Guid LocationId { get; set; }

    private readonly UserProfileModelValidator _validator = new();
    private readonly UserService _userService = new();

    protected override AbstractValidator<UserProfileViewModel> Validator => _validator;

    protected override async Task<UserProfileViewModel> CreateInitialModel()
    {
        var p = await _userService.GetUserAsync(AccountId, LocationId);
        await ModalHostState.SetTitle($"User Profile: {p.FirstName} {p.LastName}");
        return p;
    }

    protected override async Task PersistAsync(UserProfileViewModel model)
        => await _userService.SaveUserAsync(model);

}
